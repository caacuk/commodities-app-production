{"version":3,"sources":["components/landing.jsx","App.js","serviceWorker.js","index.js","rsz_2photo6.jpg"],"names":["Landing","state","Responsive","minWidth","onlyTablet","Container","Divider","Segment","basic","textAlign","Grid","columns","Column","width","Image","size","src","photo","inline","rounded","circular","verticalAlign","Header","color","content","href","Icon","name","section","divided","Row","style","fontSize","List","as","Item","value","target","maxWidth","onlyMobile","padded","piled","Component","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.f2000d43.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport photo from \"../rsz_2photo6.jpg\";\r\nimport {\r\n  Container,\r\n  Segment,\r\n  Grid,\r\n  Image,\r\n  Header,\r\n  Divider,\r\n  List,\r\n  Icon,\r\n  Responsive,\r\n} from \"semantic-ui-react\";\r\n\r\nclass Landing extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Responsive minWidth={Responsive.onlyTablet.minWidth}>\r\n          <Container>\r\n            {/* Header Page */}\r\n            <Divider />\r\n            <Segment basic textAlign=\"center\">\r\n              <Grid columns={3}>\r\n                <Grid.Column width=\"3\">\r\n                  <Image\r\n                    size=\"small\"\r\n                    src={photo}\r\n                    inline\r\n                    rounded\r\n                    circular\r\n                  ></Image>\r\n                </Grid.Column>\r\n                <Grid.Column textAlign=\"left\" verticalAlign=\"middle\" width=\"10\">\r\n                  <Header\r\n                    size=\"huge\"\r\n                    color=\"grey\"\r\n                    content=\"Cacuk Jati Pangestu\"\r\n                  />\r\n                  <p>Bandung, Indonesia </p>\r\n                  <a href=\"http://caacuk.github.io\">\r\n                    <Icon name=\"github\" size=\"large\" color=\"grey\" />\r\n                  </a>\r\n                  <a href=\"http://www.instagram.com/caacuk\">\r\n                    <Icon name=\"instagram\" size=\"large\" color=\"grey\" />\r\n                  </a>\r\n                </Grid.Column>\r\n              </Grid>\r\n            </Segment>\r\n            <Divider section />\r\n\r\n            {/* Content */}\r\n            <Grid columns={2} textAlign=\"left\" divided>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign=\"justified\" width=\"3\">\r\n                  <Segment basic>\r\n                    <Header color=\"grey\" content=\"About me\" />\r\n                  </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column textAlign=\"justified\" width=\"11\">\r\n                  <p style={{ fontSize: 17 }}>\r\n                    I am motivated to be a software engineer and learn new\r\n                    knowledge. <br />\r\n                    Graduated with a degree in Computer Science from Universitas\r\n                    Pendidikan Indonesia (UPI).\r\n                  </p>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Divider />\r\n              <Grid.Row>\r\n                <Grid.Column textAlign=\"justified\" width=\"3\">\r\n                  <Segment basic>\r\n                    <Header color=\"grey\" content=\"Skills\" />\r\n                  </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column textAlign=\"left\">\r\n                  <List as=\"ol\" size=\"large\">\r\n                    <List.Item as=\"li\" value=\"-\">\r\n                      Node.js\r\n                    </List.Item>\r\n                    <List.Item as=\"li\" value=\"-\">\r\n                      React.js\r\n                    </List.Item>\r\n                    <List.Item as=\"li\" value=\"-\">\r\n                      Express.js\r\n                    </List.Item>\r\n                    <List.Item as=\"li\" value=\"-\">\r\n                      Flask Python\r\n                    </List.Item>\r\n                    <List.Item as=\"li\" value=\"-\">\r\n                      HTML/CSS\r\n                    </List.Item>\r\n                    <List.Item as=\"li\" value=\"-\">\r\n                      MySQL\r\n                    </List.Item>\r\n                  </List>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Divider />\r\n              <Grid.Row>\r\n                <Grid.Column textAlign=\"justified\" width=\"3\">\r\n                  <Segment basic>\r\n                    <Header color=\"grey\" content=\"Education\" />\r\n                  </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column textAlign=\"left\">\r\n                  <Header size=\"small\">\r\n                    Universitas Pendidikan Indonesia (UPI) (2016-2020)\r\n                  </Header>\r\n                  <p>\r\n                    <i>Bachelor of Computer Science - Cum Laude</i>\r\n                  </p>\r\n                  <Header size=\"small\">SMAN 24 Bandung (2013-2016)</Header>\r\n                  <p>\r\n                    <i>Science Major</i>\r\n                  </p>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Divider />\r\n              <Grid.Row>\r\n                <Grid.Column textAlign=\"justified\" width=\"3\">\r\n                  <Segment basic>\r\n                    <Header color=\"grey\" content=\"What Can I Build?\" />\r\n                  </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column textAlign=\"left\">\r\n                  <Header\r\n                    size=\"medium\"\r\n                    as=\"a\"\r\n                    href=\"https://caacuk-chatbot.herokuapp.com/\"\r\n                    target=\"_blank\"\r\n                    color=\"teal\"\r\n                  >\r\n                    ChatBot Web Application\r\n                  </Header>\r\n                  <p>\r\n                    <i>Python, Flask, SocketIO, HTML/CSS, Docker</i>\r\n                  </p>\r\n                  <Divider />\r\n                  <Header\r\n                    size=\"medium\"\r\n                    as=\"a\"\r\n                    href=\"https://github.com/caacuk/dc-video-conversion\"\r\n                    target=\"_blank\"\r\n                    color=\"teal\"\r\n                  >\r\n                    Video Conversion Web Application\r\n                  </Header>\r\n                  <p>\r\n                    <i>\r\n                      Python, Flask, Celery (Asynchronous Task), Redis, Nginx,\r\n                      Docker, Docker-Compose\r\n                    </i>\r\n                  </p>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n            <Divider section />\r\n          </Container>\r\n        </Responsive>\r\n\r\n        <Responsive maxWidth={Responsive.onlyMobile.maxWidth}>\r\n          <Divider />\r\n          <Container>\r\n            {/* Header Page */}\r\n            <Segment basic textAlign=\"center\">\r\n              <Grid columns={2}>\r\n                <Grid.Column width=\"6\">\r\n                  <Image\r\n                    size=\"small\"\r\n                    src={photo}\r\n                    inline\r\n                    rounded\r\n                    circular\r\n                  ></Image>\r\n                </Grid.Column>\r\n                <Grid.Column textAlign=\"left\" verticalAlign=\"middle\">\r\n                  <Header\r\n                    size=\"small\"\r\n                    color=\"grey\"\r\n                    content=\"Cacuk Jati Pangestu\"\r\n                  />\r\n                  <p style={{ fontSize: 11 }}>Bandung, Indonesia </p>\r\n                  <a href=\"http://caacuk.github.io\">\r\n                    <Icon name=\"github\" size=\"large\" color=\"grey\" />\r\n                  </a>\r\n                  <a href=\"http://www.instagram.com/caacuk\">\r\n                    <Icon name=\"instagram\" size=\"large\" color=\"grey\" />\r\n                  </a>\r\n                </Grid.Column>\r\n              </Grid>\r\n            </Segment>\r\n            <Divider />\r\n\r\n            {/* Content */}\r\n            <Grid textAlign=\"center\" padded>\r\n              <Grid.Row>\r\n                <Segment basic piled style={{ width: 500 }}>\r\n                  <Header\r\n                    color=\"grey\"\r\n                    content=\"About me\"\r\n                    size=\"small\"\r\n                    textAlign=\"left\"\r\n                  />\r\n                  <p style={{ fontSize: 14, textAlign: \"justify\" }}>\r\n                    I am motivated to be a software engineer and learn new\r\n                    knowledge. Graduated with a degree in Computer Science from\r\n                    Universitas Pendidikan Indonesia (UPI).\r\n                  </p>\r\n                </Segment>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Segment basic piled style={{ width: 500 }}>\r\n                  <Header\r\n                    color=\"grey\"\r\n                    content=\"Education\"\r\n                    size=\"small\"\r\n                    textAlign=\"left\"\r\n                  />\r\n                  <Header size=\"tiny\">\r\n                    Universitas Pendidikan Indonesia (UPI) (2016-2020)\r\n                  </Header>\r\n                  <p style={{ fontSize: 12 }}>\r\n                    <i>Bachelor of Computer Science - Cum Laude</i>\r\n                  </p>\r\n                  <Header size=\"tiny\">SMAN 24 Bandung (2013-2016)</Header>\r\n                  <p style={{ fontSize: 12 }}>\r\n                    <i>Science Major</i>\r\n                  </p>\r\n                </Segment>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Segment basic piled style={{ width: 500 }}>\r\n                  <Header\r\n                    color=\"grey\"\r\n                    content=\"Skills\"\r\n                    size=\"small\"\r\n                    textAlign=\"left\"\r\n                  />\r\n                  <p style={{ fontSize: 12 }}>\r\n                    Node.js, React.js, Express.js, Python, Python Flask,\r\n                    HTML/CSS, MySQL\r\n                  </p>\r\n                </Segment>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Segment basic piled style={{ width: 500 }}>\r\n                  <Header\r\n                    color=\"grey\"\r\n                    content=\"What Can I Build?\"\r\n                    size=\"small\"\r\n                    textAlign=\"left\"\r\n                  />\r\n                  <Header\r\n                    size=\"tiny\"\r\n                    as=\"a\"\r\n                    href=\"https://caacuk-chatbot.herokuapp.com/\"\r\n                    target=\"_blank\"\r\n                    color=\"teal\"\r\n                  >\r\n                    ChatBot Web Application\r\n                  </Header>\r\n                  <p style={{ fontSize: 12 }}>\r\n                    <i>Python, Flask, SocketIO, HTML/CSS, Docker</i>\r\n                  </p>\r\n                  <Header\r\n                    size=\"tiny\"\r\n                    as=\"a\"\r\n                    href=\"https://github.com/caacuk/dc-video-conversion\"\r\n                    target=\"_blank\"\r\n                    color=\"teal\"\r\n                  >\r\n                    Video Conversion Web Application\r\n                  </Header>\r\n                  <p style={{ fontSize: 12 }}>\r\n                    <i>\r\n                      Python, Flask, Celery (Asynchronous Task), Redis, Nginx,\r\n                      Docker, Docker-Compose\r\n                    </i>\r\n                  </p>\r\n                </Segment>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Container>\r\n          <Divider />\r\n        </Responsive>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Landing;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Landing from \"./components/landing\";\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={Landing} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/rsz_2photo6.2e6889cf.jpg\";"],"sourceRoot":""}